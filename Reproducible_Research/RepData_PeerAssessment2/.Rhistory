1.734*sqrt(sp2*(1/10+1/10))
1.734*sqrt(sp2*(1/10+1/10))
2.101*sqrt(sp2*(1/10+1/10))-4
(mean(a)-mean(b))/sqrt(sp2*(1/5))
t.test(a,b)
2.131*sqrt(sp2*(1/10+1/10))-4
alpha=0.05
t.alpha=pt(1-alpha/2)
t.alpha=pt(1-alpha/2,df=18)
t.alpha
t.alpha=pt(-1.989,df=18,)
t.alpha
t.alpha=pt(-1.989,df=18,)*2
t.alpha
a=(137,201,167,150,173,169)
a=c(137,201,167,150,173,169)
b=c(130,181,150,153,163,160)
t.test(a-b)
t.test(a,b,paired=TRUE)
a
b
a-b
mean(a-b)
sd(a-b)
mean(a-b)/(sd(a-b)/sqrt(6))
pval=pt(3.024292,4)
pval
pval=pt(3.024292,df=6-1)
pval
pval=pt(3.024292,df=6-1)
pval=pnorm(3.024292,df=6-1)
pval=pnorm(3.024292)
pval
pval=pt(3.024292,df=6-1)
pval
1-pval
t.test(a,b,paired=TRUE)
pval=pt(3.024292,df=10)
pval
pval=pt(-3.024292,df=5)
pval
pval*2
prop.test(table(quine$Eth,quine$Sex),correct=FALSE)
p1=38/69
p2=42/77
p1
p2
z=(p1-p2)/sqrt(p1*(1-p1)/69+p2*(1-p2)/77)
z
p1
p2
0.06388193**2
0.06388193**2
help(prop.test)
p1=4684/21484
p2=5313/23199
p1
p2
z=(p1-p2)/sqrt(p1*(1-p1)/21484+p2*(1-p2)/23199)
z
pval=pnorm(2.788734)
pval
pval=pnorm(-2.788734)
pval
pnorm(1.6449)
pnorm(-1.6449)
pnorm(-1.6449)
a=c(28.0,20.0,26.5,10.6,9.1,35.2,29.1,41.2,27.5)
b=c(15.1,6.4,5.0,11.4,6.5,6.5,3.0,7.0,5.5)
a
b
length(a)
length(b)
summary(a)
summary(b)
sd(a)
sd(b)
3663*0.739/0.133
sd(a)
sd(a)
sd(b)
sd(a)/sd(b)
var.test(a,b)
a
b
sd(a)
sd(b)
sd(a)/sd(b)
sd(a)/sd(b)
(sd(a)/sd(b))**2
a=c(7921,5184,8836,4761)
a.max
max(a)
min(a)
max(a)-min(a)
mean(a)
(4761-mean(a))/(max(a)-min(a))
(89+72+94+69)/4.
(89-81)/(94-69)
mean(a)
(7921+5184+8836+4761)/4.
8836-4761
(4761-6675.5)/4075
(45687.6-42778.6)/
(45687.6-42778.6)/42778.6
(45687.6-42778.6)/42778.6
(45687.6-42778.6)/42778.6
log(1)
log(0.001)
log(0.0000001)
log(0.000000000001)
-log(0.000000000001)
4318.8/1441294.6
4318.8/144
4318.8/1441294.6*1000
12.8/(4318.8/1441294.6)*24.8*0.699
12.8*(4318.8/1441294.6)*24.8*0.699
12.8*(4318.8/1441294.6)*25*0.699
12.8*(4318.8/1441294.6)*24.8*0.699
12.8*(4318.8/1441294.6)*24.8*0.699*8.46
sqrt(307.4**2+168.4**2)
sqrt(307.4**2+168.4**2)/4318.8
p = array(data = 0, dim = 305)
d6 = rep(1/6,6)
i6 = 1:6
p[i6] = d6
for (i in 1:299) p[i+i6] = p[i+i6] + p[i]*d6
p
d6
i6
p = array(data = 0, dim = 25)
p
p[1]
p[2]
p = array(data = 0, dim = 305)
d6 = rep(1/6,6)
i6 = 1:6
p[i6] = d6
for (i in 1:299) p[i+i6] = p[i+i6] + p[i]*d6
p[1]
p[2]
p[3]
d6
p
433+141+1460+98+384+246
1319.46+20.26+19.48+14.46+118.77
pwd
getwd
getwd()
df1 = read.table("table.txt",header=TRUE)
df1
r = c(t(as.matrix(df1)))
r
as.matrix(df1)
t(as.matrix(df1))
c(t(as.matrix(df1)))
r
f=c("Item1","Item2","Item3")
f
k=3
n=6
tm=gl(k,1,n*k,factor(f))
tm
av = aov(r~tm)
av
summary(av)
1/(1+exp(-4))
1/(1+exp(-4.6))
1/(1+exp(4.6))
sqrt(0.18*0.18-0.13*0.13)
sqrt(116**2+88**2)
669/4318.8
sqrt((145.6/669)**2+(350.5/4318.8)**2)
sqrt((145.6/669)**2+(350.5/4318.8)**2)*0.1549041
3.0/67.00
67.00/3.0
3.0*24.8*0.703
3.0/24.8/0.703
0.703*24.8
(4318.8/1441294.6)*12.8*24.8*0.699
(669/1441294.6)*12.8*24.8*0.699
(669/1441294.6)*12.8*24.8*0.699*21.8
sqrt(13.2**2+2.5**2)
157.99+3.16+11.28
157.99+3.16+11.28+9.67
65.65+25.96
64-45.7
233851+81778.5
84746.2+36489.7
(42058.6+83476.9)/2.0
(21472.5+21.4725)/2.0
(22284.3+22.2843)/2.
(21472.5+21.4725)
(21472.5+12236.4)/2.0
(19750+22284.3)/2.
(6997.66+6751.01)/2.0
315630-40011-16052-33460-29908-10967-11531-6049-6018-62768-21017-2150-1170-24-13
315630-40011-16052-33460-29908-10967-11531-6049-6018-62768-21017-2150-1170-24-13
315630-40011-16052-33460-29908-10967-11531-6049-6018-62768-21017-2150-1170-24-13
121236-20965-9646-12810-14982-16854-6874-1853-1011-17
386271-52238-19088-36137-39479-11845-15221-6533-7944-155745-50745-1554-871-27-15
386271-52238-19088-36137-39479-11845-15221-6533-7944-155613-50745-1554-871-27-15
378756-48014-19263-40152-35890-13835-19776-13161-13837-7259-7222-150643-50441-2580-1404-29-16
378756-48014-19263-40152-35890-13161-13837-7259-7222-150643-50441-2580-1404-29-16
139610-21701-11399-13835-19776-39342-16469-1333-750-19
139610-21701-11399-13835-19776-39342-16469-1333-750-19
145483-25158-11576-15372-17978-40451-16498-2224-1213-21
386271-52238-19088-36137-39479-11845-15221-155745-50745-1554-871-27-15
378756-48014-19263-40152-35890-13161-13837-7259-7222-150643-50441-2580-1404-29-16
378756-48014-19263-40152-35890-13161-13837-150643-50441-2580-1404-29-16
139610-21701-11399-13835-19776-39342-16469-1333-750-19-6533-7944
145483-25158-11576-15372-17978-40451-16498-2224-1213-21-7259-7222
1.16105-1.04595
1.16105-1.04595
1.16105-1.04595
1319.46+545.99+431
828*2+14*20
(828*2+14*20)*0.58
2.6/0.16
2.6/18
2.6/18.
4.3/22
22/40.
*0.5/(22/40)
*0.5/(22/40.)
0.5/(22/40.)
4.5/0.25
62/60
634.416-4.92691*2-3.598455*15
(634.416-4.92691*2-3.598455*15)/16.
42.4-3.3/2-4.8
42.4-3.3/2-4.8
42.4-3.3
42.4-3.3
42.4-3.3
42.4-3.3
634.416-3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+3.598455/2.0
3.598455/2.+35.66158
3.598455+35.66158
112/0.75
42.16/0.75
20*15
20*15+1650
2000*0.53
681+518+50+90
182-154
182-154-2.8
15*12*2
24*27+100
34.42*24
40+34.42-15
40+34.42-15-25
40+34.42-40
(25+27)*24
40*24
1248-40*24
(1248-40*24)/15.
1/0.035274
-3%800
14.5+11.3+13.3+11+9.5+15.8+15.8+12.2+17.2+10+10.5+16+16
1/4*5*s**2/tan(pi/5)
1/4*5*35**2/tan(pi/5)
1/4*5*7**2/tan(pi/5)
75+50+100+50+100+1000+50+75+50+75+50+50+50+50+50+50+50+50+50+50+200
?rnorm
help.search("rnorm")
args("rnorm")
rnorm
con <- url("http://www.jhsph.edu","r")
x<-readLines(con)
head(x)
lapply
rpart
lubridate
knitr
kernlab
?kernlab
?rpart
help.search("rpart")
install.packages("rpart")
rpart
?rpart
a = available.packages()
head(rownames(a),3)
head(rownames(a),10)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
install.packages("KernSmooth")
library(KernSmooth)
pwd
getwd
getwd()
getwd()
dir()
mean(x)
x<-rnorm(100)
mean(x)
}
myfunction = function() {
x<-rnorm(100)
mean(x)
}
myfunction
myfunction()
x+rnorm(length(x))
second = function(x){
x+rnorm(length(x))
}
ls()
second(4)
second(4:8)
library(datasets)
data(airquality)
cor(airquality)
x<-1
print(x)
x
s = 1:20
s
help(vector)
vector(integer,100)
vector("integer"",100)
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
library(datasets)
data(iris)
?iris
data(iris)
iris
mean(iris$Sepal.Length)
?colMeans()
?apply()
apply(iris[, 1:4], 2, mean)
data(mtcars)
mtcars
?mtcars
sapply(mtcars,mtcars$cyl,mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(mtcars,cyl,mean)
split(mtcars,mtars$cyl)
split(mtcars,mtcars$cyl)
apply(mtcars,2,mean)
sapply(split(mtcars,mtcars$cyl),mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
split(mtcars$mpg,mtcars$cyl)
split(mtcars,mtcars$cyl)
debug(ls)
ls
ls()
quit
quit()
exit()
setwd("~/repo/git/r/ExData_Plotting1/")
source ("plot1.R")
source ("plot1.R")
source ("plot2.R")
source ("plot3.R")
source ("plot3.R")
source ("plot3.R")
source ("plot4.R")
url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
tmpe <- tempfile()
download.file(url,temp,method="curl")
download.file(url,destfile="tmp.zip",method="curl")
dir()
unzip(tmp.zip)
unzip("tmp.zip")
dir()
getwd()
quit()
install.packages("devtools")
library(devtools)
library("devtools")
require("devtools")
library("devtools")
library(devtools)
require(devtools)
install_git
quit()
sessionInfo()
dir()
ls()
mtcaars
mtcars
rownames(mtcars)
rownames(mtcars)[Valiant]
rownames(mtcars)["Valiant"]
rownames(mtcars)
rownames(mtcars)[1]
rownames(mtcars)[2]
rownames(mtcars)[3]
rownames(mtcars)[1:100]
rownames(mtcars)[1:10]
rownames(mtcars)
mtcars
rownames(mtcars)[mpg]
rownames(mtcars)[1]
rownames(mtcars)[,1]
rownames(mtcars)[1]
rownames(mtcars)[2]
rownames(mtcars)[3]
rownames(mtcars)[4]
ls()
quit()
setwd("~/repo/git/r/RepData_PeerAssessment2/")
X = data.table(grp=c("a","a","b","b","b","c","c"), foo=1:7)
library(data.table)
X = data.table(grp=c("a","a","b","b","b","c","c"), foo=1:7)
X
X
X["grp"]
X$grp
tab_num <- matrix(1:10,nrow=1,byrow=TRUE)
tab_num
tab_num <- matrix(1:10,ncol=1,byrow=TRUE)
tab_num
?labels
dt_subset_0$PROPDMGEXP <- gsub("K"   , "1000", dt_subset_0$PROPDMGEXP)
gsub("K","1000")
x <- c("K","M","B")
gsub("K","1000",x)
gsub("K|k","1000",x)
DT = data.table(x=rep(c("a","b","c"),each=3), y=c(1,3,6), v=1:9)
DT
DT[1:5]
DT[1:5,]
DT[1:5,]
DT[,1:2]
setkey(DT,x)
DT[,1:2]
DT[,]
DT[,1:2]
DT[,x]
DT[,y]
a = data.table(x=rep(c("a","b","c"),each=3), y=c(1,3,6), v=1:9)
a
a[,x]
a[,y]
a[,b]
