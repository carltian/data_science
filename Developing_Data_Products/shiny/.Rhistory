(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+4.92691+3.598455/2.0
(634.416-4.92691*2-3.598455*15)/16.+3.598455/2.0
3.598455/2.+35.66158
3.598455+35.66158
112/0.75
42.16/0.75
20*15
20*15+1650
2000*0.53
681+518+50+90
182-154
182-154-2.8
15*12*2
24*27+100
34.42*24
40+34.42-15
40+34.42-15-25
40+34.42-40
(25+27)*24
40*24
1248-40*24
(1248-40*24)/15.
1/0.035274
-3%800
14.5+11.3+13.3+11+9.5+15.8+15.8+12.2+17.2+10+10.5+16+16
1/4*5*s**2/tan(pi/5)
1/4*5*35**2/tan(pi/5)
1/4*5*7**2/tan(pi/5)
75+50+100+50+100+1000+50+75+50+75+50+50+50+50+50+50+50+50+50+50+200
?rnorm
help.search("rnorm")
args("rnorm")
rnorm
con <- url("http://www.jhsph.edu","r")
x<-readLines(con)
head(x)
lapply
rpart
lubridate
knitr
kernlab
?kernlab
?rpart
help.search("rpart")
install.packages("rpart")
rpart
?rpart
a = available.packages()
head(rownames(a),3)
head(rownames(a),10)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
install.packages("KernSmooth")
library(KernSmooth)
pwd
getwd
getwd()
getwd()
dir()
mean(x)
x<-rnorm(100)
mean(x)
}
myfunction = function() {
x<-rnorm(100)
mean(x)
}
myfunction
myfunction()
x+rnorm(length(x))
second = function(x){
x+rnorm(length(x))
}
ls()
second(4)
second(4:8)
library(datasets)
data(airquality)
cor(airquality)
x<-1
print(x)
x
s = 1:20
s
help(vector)
vector(integer,100)
vector("integer"",100)
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
library(datasets)
data(iris)
?iris
data(iris)
iris
mean(iris$Sepal.Length)
?colMeans()
?apply()
apply(iris[, 1:4], 2, mean)
data(mtcars)
mtcars
?mtcars
sapply(mtcars,mtcars$cyl,mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(mtcars,cyl,mean)
split(mtcars,mtars$cyl)
split(mtcars,mtcars$cyl)
apply(mtcars,2,mean)
sapply(split(mtcars,mtcars$cyl),mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
split(mtcars$mpg,mtcars$cyl)
split(mtcars,mtcars$cyl)
debug(ls)
ls
ls()
quit
quit()
exit()
setwd("~/repo/git/r/ExData_Plotting1/")
source ("plot1.R")
source ("plot1.R")
source ("plot2.R")
source ("plot3.R")
source ("plot3.R")
source ("plot3.R")
source ("plot4.R")
url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
tmpe <- tempfile()
download.file(url,temp,method="curl")
download.file(url,destfile="tmp.zip",method="curl")
dir()
unzip(tmp.zip)
unzip("tmp.zip")
dir()
getwd()
quit()
l
l
setwd("rep/git/r/")
setwd("repo/git/r/")
dir()
setwd("ExData_Plotting1/")
dir()
source ("plot1.R")
file.exists("household_power_consumption.txt")
source ("plot1.R")
source ("plot1.R")
source ("plot1.R")
set.seed(1)
library(kernlab)
install.packages("kernlib")
install.packages("kernlab")
library(kernlab)
data(spam)
set.seed(1)
trainIndicator = rbinom(4601, size=1, prob=0.5)
?rbinom
str(rbinom)
trainIndicator
table(trainIndicator)
rbinom(1,5,1/6)
rbinom(3,5,1/6)
rbinom(1,5,1/6)
rbinom(3,10,1/6)
rbinom(30,10,1/6)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1,]
testSpam = spam[trainIndicator == 0,]
trainSpam
names(trainSpam)
str(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve,trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve+1) ~ trainSpam$type)
plot(log10(trainSpam[,1:4]+1))
hCluster <- hclust(dist(t(trainSpam[,1:57])))
plot(hCluster)
t(trainSpam[,1:57])
?t
dist(t(trainSpam[,1:57]) )
?dist
names(trainSpam)
tra$numType
trainSpam$numType
trainSpam$numType <- as.numeric(trainSpam$type) -1
trainSpam$numType
as.numeric(trainSpam$type)
trainSpam$type
costFunction = function(x,y) sum(x!= (y>0.5))
cvError = rep(NA,55)
cvError
library(root)
install.packages("root)
")
install.packages("root")
install.packages("boot")
library(boot)
cvError = rep(NA,55)
getwd()
setwd("../")
dir
dir()
source ("ml.R")
source ("ml.R")
source ("ml.R")
source ("ml.R")
source ("ml.R")
source ("ml.R")
(124+500)/(1314+500+124+446)
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0,0,2,0,0)
plot(x,y)
plot(x,y,lwd=3)
plot(x,y,lwd=3,type="l")
plot(x,y,lwd=3,type="l",frame=FALSE)
pbeta(0.75,2,1)
0.997*0.001/(0.997*0.001+0.015*0.999)
x<-rnorm(1000)
plot(x)
plot(qnorm(1000))
plot(qnorm(1000,1)
)
plot(qnorm(1000,0,1))
plot(pnorm(1000,0,1))
hist(pnorm(1000,0,1))
hist(rnorm(1000,0,1))
x <- 1:4
p <- x/sum(x)
temp <-rbind(x,p)
rownames(temp) <- c("X","Prob")
temp
x
p
1.0*0.1+0.2*2.0+3.0*0.3+4.0*0.4
p <- c(0.1,0.2,0.3,0.4)
x <- 2:5
p*x
mean(p*x)
x
ave(p*x)
sum(p*x)
x
x*x
(x-4)^2
((x-4)^2)*P
((x-4)^2)*P
((x-4)^2)*p
0.3*0.75/(0.3*0.75+0.7*0.48)
x<-rnorm(100)
y <- rnorm(100)
order <- ordre(x)
order <- order(x)
order
x
x[order]
x[order[100]]
order[100]
x[order]
order
x[order[100]]
y[odr[100]]
order
y[order[100]]
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
x
w
x*w
mean(x*w)
mean(x^2*w)
(0.18*2-0.154*1+0.42*3+0.95*1)/4
(0.18*2-1.54*1+0.42*3+0.95*1)/4
(0.18-1.54+0.42+0.95)/4
sum((x-0.1471)^2*w)
sum((x-0.3)^2*w)
sum((x-0.0025)^2*w)
sum((x-1.077)^2*w)
x
w
z <- c(0.1471,0.300,0.0025,1.077)
sum((x-z)^2*w)
((x-z)^2*w)
x-z
sum((x)^2*w)
sum((x)^2)
sum((x))
sum((x-z[1])^2)
sum((x-z[1])^2*w)
sum((x-z[2])^2*w)
sum((x-z[3])^2*w)
sum((x-z[4])^2*w)
0.18*2-1.54*1+0.42*3+0.95*1
(0.18*2-1.54*1+0.42*3+0.95*1)/4.
sum((x-z[1])^2*w)
sum((x-z[1])^2*w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
0.18*2-1.54*1+0.42*3+0.95*1
(0.18*2-1.54*1+0.42*3+0.95*1)/4.
(2*0.18-1*1.54+0.42*3+0.95*1)/4.
(0.18-1.54+0.42+0.95)/4.
x
x <- c(0.18, -1.54, 0.42, 0.95)
x
w
2*(0.18-0.0025)^2+1*(-1.54-0.0025)^2+(0.42-0.0025)^2+(0.95-0.0025)^2
sum((x-z[1])^2*w)
(x-z[1])^2*w
2*(0.18-0.0025)^2
2*(0.18-0.0025)^2
z[1]
z
(x-z[3])^2*w
1*(-1.54-0.0025)^2
(x-z[3])^2*w
sum((x-z[3])^2*w)
2*(0.18-0.0025)^2+1*(-1.54-0.0025)^2+3*(0.42-0.0025)^2+1*(0.95-0.0025)^2
(x-z[3])^2*w
sum((x-z[3])^2*w)
sum((x-z[1])^2*w)
sum((x-z[2])^2*w)
sum((x-z[3])^2*w)
sum((x-z[4])^2*w)
plot(x*w)
x*w
hist(x*w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
xbar <- mean(x)
ybar <- mean(y)
yc <- y-ybar
xc <- x-xbar
lm(yc ~ xc)
coef(lm(yc ~ xc))
data(mtcars)
lm(mpg ~ weight)
mtcars
names(mtcars)
lm($mtcarsmpg ~ $mtcars$wt)
lm(mtcars$mpg ~ $mtcars$wt)
lm(mtcars$mpg ~ mtcars$wt)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
sd(x)
m <- mean(x)
x <- x-m
x
x/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
x
y
lm(y~x)
lm(y~x-1)
?density
?abline
library(kernlab)
data(spam)
set.seed(10)
smallSpam <- spam[sample(dim(spam)[1],size=10)]
sample(dim(spam)[1],size=10)
smallSpam <- spam[sample(dim(spam)[1],size=10),]
smallSpam
sample(dim(spam)[1],size=10)
spamLabel <- (smallSpam$type=="spam")*1+1
spamLabel
(smallSpam$type=="spam")
(smallSpam$type=="spam")*1
(smallSpam$type=="spam")*1+1
plot(smallSpam$capitalAve,col=spamLabel)
getwd()
source ("rule1.R")
source ("rule1.R")
source ("rule1.R")
source ("rule1.R")
table(rule1(smallSpam$capitalAve),smallSpam$type)
table(rule1(smallSpam$capitalAve),smallSpam$type)
source ("rule1.R")
table(rule1(smallSpam$capitalAve),smallSpam$type)
source ("rule1.R")
table(rule1(smallSpam$capitalAve),smallSpam$type)
source ("rule1.R")
table(rule1(smallSpam$capitalAve),smallSpam$type)
?rep
str(rep)
a <- rep(NA,10)
a
a[1]
a[5]
a[3>2]
a[3>5]
0.99*0.001/(0.99*0.001+0.01*0.999)
99900*0.99
install.packages("shiny")
getwd()
setwd("shiny/")
runApp()
install.packages("runApp")
library("shiny")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("manipulate")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
?abline
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
library(rCharts)
install.packages("rCharts")
install.packages("rCharts")
require(devtools)
install("devtools")
install.packages("devtools")
require(devtools)
install_github('rCharts', 'ramnathv')
installed.packages
installed.packages()
install_github('rCharts', 'ramnathv')
library("devtools")
install_github('rCharts', 'ramnathv')
library(devtools)
library(devtools)
install_github('rCharts', 'ramnathv')
quit()
